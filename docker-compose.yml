version: '3'

services:

  admin:
    container_name: admin-service
    image: admin-server
    build:
      context: admin-service/
      args:
        JAR_FILE: build/libs/admin-service-0.0.1-SNAPSHOT.jar
    ports: 
      - "8086:8086"
    networks:
      - backend

  config:
    container_name: config-service
    image: config-server
    build:
      context: config-service/
      args:
        JAR_FILE: build/libs/config-service-0.0.1-SNAPSHOT.jar
    ports:
      - "8081:8081"
    networks:
      - backend

  image:
    container_name: image-service
    image: image-server
    build:
      context: image-service/
      args:
        JAR_FILE: build/libs/service-client-0.0.1-SNAPSHOT.jar
    ports: 
      - "8092:8092"
    networks:
      - backend
    depends_on:
      - config
      - registry
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      - WAIT_HOSTS=registry:8099
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30
  
  client:
    container_name: client-service
    image: client-server
    build:
      context: cliente-service/
      args:
        JAR_FILE: build/libs/service-client-0.0.1-SNAPSHOT.jar
    ports: 
      - "8091:8091"
    networks:
      - backend
    depends_on:
      - config
      - registry
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      - WAIT_HOSTS=registry:8099
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30

  registry:
    container_name: registry-service
    image: registry-server
    build:
      context: registry-service/
      args:
        JAR_FILE: build/libs/registry-service-0.0.1-SNAPSHOT.jar
    ports: 
      - "8099:8099"
    networks:
      - backend
    depends_on:
      - config
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      - WAIT_HOSTS=config:8081
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30

  gateway:
    container_name: gateway-service
    image: gateway-server
    build:
      context: gateway-service/
      args:
        JAR_FILE: build/libs/gateway-service-0.0.1-SNAPSHOT.jar
    ports: 
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - config
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      - WAIT_HOSTS=config:8081
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30

  mysql:
    container_name: mysql
    image: mysql
    environment:
      - MYSQL_DATABASE=backTest
      - MYSQL_HOST=localhost
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_USER=testUser
      - MYSQL_PASSWORD=testPassword
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend
  
  sonarqube:
    container_name: sonarqube
    image: sonarqube
    ports: 
      - "9000:9000"
    networks:
      - backend
    volumes:
      - "./sonarqubeVol/data:/opt/sonarqube/data"
      - "./sonarqubeVol/extensions:/opt/sonarqube/extensions"

  jenkins: 
    container_name: jenkins
    image: jenkins/jenkins
    ports:
      - "8082:8080"
    volumes:
      - ./jenkinsVol:/var/jenkins_home
    networks:
      - backend
    
networks:
  backend:

volumes:
  db: